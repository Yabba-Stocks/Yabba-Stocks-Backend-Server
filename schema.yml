openapi: 3.0.3
info:
  title: YabbaStocks API Documentation
  version: 1.0.0
  description: YabbaStocks is a platform for trading digital assets.
paths:
  /yabbastocks/accounts/forgot-password/:
    post:
      operationId: yabbastocks_accounts_forgot_password_create
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgotPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPassword'
          description: ''
  /yabbastocks/accounts/login/:
    post:
      operationId: yabbastocks_accounts_login_create
      description: |-
        LoginAPIView handles the POST request of logging in
        a verified user with valid login credentials.
      tags:
      - yabbastocks
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /yabbastocks/accounts/password-resend-otp/:
    post:
      operationId: yabbastocks_accounts_password_resend_otp_create
      description: |-
        PasswordResendOTP handles the POST request of resending an
        OTP to a user after forgotpassword.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendOTP'
          description: ''
  /yabbastocks/accounts/password-reset/:
    post:
      operationId: yabbastocks_accounts_password_reset_create
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPassword'
          description: ''
  /yabbastocks/accounts/password-verify-otp/:
    post:
      operationId: yabbastocks_accounts_password_verify_otp_create
      description: |-
        PasswordVerifyOTP handles the POST request of verifying a
        register user with valid email address.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
  /yabbastocks/accounts/register/:
    post:
      operationId: yabbastocks_accounts_register_create
      description: |-
        Register handles the POST request of registering a user,
        It takes in email, password and password2 as payload
        and returns a validation email upon success.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /yabbastocks/accounts/resend-otp/:
    post:
      operationId: yabbastocks_accounts_resend_otp_create
      description: |-
        ResendOTP handles the POST request of resending an
        OTP to a user.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendOTP'
          description: ''
  /yabbastocks/accounts/token-refresh/:
    post:
      operationId: yabbastocks_accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /yabbastocks/accounts/verify-otp/:
    post:
      operationId: yabbastocks_accounts_verify_otp_create
      description: |-
        EmailVerifyOTP handles the POST request of verifying a
        register user with valid email.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOTP'
          description: ''
  /yabbastocks/accounts/verify-token/:
    post:
      operationId: yabbastocks_accounts_verify_token_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - yabbastocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    ForgotPassword:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
      required:
      - email
    Register:
      type: object
      description: Serailizers for our User first time registration
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          maxLength: 80
        password:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 255
        confirm_password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
      required:
      - confirm_password
      - email
      - id
    ResendOTP:
      type: object
      description: Serailizers for resending OTP to our users.
      properties:
        email:
          type: string
        id:
          type: integer
      required:
      - email
      - id
    ResetPassword:
      type: object
      properties:
        otp:
          type: string
          maxLength: 50
          minLength: 6
        password:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
        password2:
          type: string
          writeOnly: true
          maxLength: 68
          minLength: 6
      required:
      - otp
      - password
      - password2
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    VerifyOTP:
      type: object
      properties:
        otp:
          type: string
      required:
      - otp
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
